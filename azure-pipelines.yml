variables:
  repo: 'nntin/discord-twitter-bot'

jobs:

- job: 'BasicTest'
  condition: always()
  strategy:
    matrix:
      Python36-Windows-Style:
        PYTHON_VERSION: '3.6'
        IMAGE_NAME: 'vs2017-win2016'
        TOXENV: 'style'
      Python36-Windows:
        PYTHON_VERSION: '3.6'
        IMAGE_NAME: 'vs2017-win2016'
        TOXENV: 'py36'
      Python36-Linux:
        PYTHON_VERSION: '3.6'
        IMAGE_NAME: 'ubuntu-16.04'
        TOXENV: 'py36'
      Python36-MacOSX:
        PYTHON_VERSION: '3.6'
        IMAGE_NAME: 'macos-10.13'
        TOXENV: 'py36'

  pool:
    vmImage: '$(IMAGE_NAME)'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'

  - script: python -m pip install --upgrade pip && pip install setuptools tox
    displayName: 'Install tox'

  - script: |
      tox -e $(TOXENV)
    displayName: 'unittest'
    env:
      ACCESS_TOKEN: 'X'
      ACCESS_TOKEN_SECRET: 'X'
      CONSUMER_KEY: 'X'
      CONSUMER_SECRET: 'X'
      WEBHOOK_URL: 'X'
      TWITTER_ID: '3065618342'

- job: 'ExtendedTest'
  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
  dependsOn: 'BasicTest'
  variables:
  - group: dtb-variables
  strategy:
    matrix:
      Python36-Windows:
        PYTHON_VERSION: '3.6'
        IMAGE_NAME: 'vs2017-win2016'
        TOXENV: 'extended'
      Python36-Linux:
        PYTHON_VERSION: '3.6'
        IMAGE_NAME: 'ubuntu-16.04'
        TOXENV: 'extended'
      Python36-MacOSX:
        PYTHON_VERSION: '3.6'
        IMAGE_NAME: 'macos-10.13'
        TOXENV: 'extended'
  pool:
    vmImage: '$(IMAGE_NAME)'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(PYTHON_VERSION)'

  - script: python -m pip install --upgrade pip && pip install setuptools tox
    displayName: 'Install tox'

  - script: |
      tox -e $(TOXENV)
    displayName: 'unittest'
    env:
      ACCESS_TOKEN: $(CI_ACCESS_TOKEN)
      ACCESS_TOKEN_SECRET: $(CI_ACCESS_TOKEN_SECRET)
      CONSUMER_KEY: $(CI_CONSUMER_KEY)
      CONSUMER_SECRET: $(CI_CONSUMER_SECRET)
      WEBHOOK_URL: $(CI_WEBHOOK_URL)
      TWITTER_ID: '3065618342'

- job: 'DockerBuild'
  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
  dependsOn: 'ExtendedTest'
  strategy:
    matrix:
      a53-h3-h5:
        target_arch: 'aarch64'
        docker_arch: 'arm64v8'
      raspberry-pi:
        target_arch: 'arm'
        docker_arch: 'arm32v6'
      most-prominent:
        target_arch: 'x86_64'
        docker_arch: 'amd64'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - script: docker run --rm --privileged multiarch/qemu-user-static:register
    displayName: 'Registering'

  # https://github.com/multiarch/qemu-user-static/releases
  - script: |
      wget -N https://github.com/multiarch/qemu-user-static/releases/download/v2.9.1-1/x86_64_qemu-$(target_arch)-static.tar.gz
      tar -xvf x86_64_qemu-$(target_arch)-static.tar.gz
      docker pull $(repo) || true
    displayName: 'Fetching...'

  - task: ShellScript@2
    displayName: 'Run build script'
    inputs:
      scriptPath: ./azure/build.sh

  - script: |
      docker build --pull --cache-from $(repo) -f Dockerfile.$(docker_arch) -t $(repo):$(docker_arch)-latest .
    displayName: 'Building Docker image'

- job: 'DockerPublish'
  condition: and(succeeded(), or(eq(variables['build.sourceBranch'], 'refs/heads/master'),eq(variables['build.sourceBranch'], 'refs/heads/dev'),eq(variables['build.sourceBranch'], 'refs/heads/azure')))
  dependsOn: 'DockerBuild'
  steps:
  - script: |
      echo "check if on master or dev branch"
      echo "login into docker"
      echo "docker pull the different arch images"
      echo "create a multi arch manifest"
    displayName: 'Placeholder'